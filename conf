#!/bin/bash

#COMMON
user="admin"
password="admin"
localhost="localhost"
port=7180
version="v8"
cluster_name="cluster"

#HDFS
hdfs_key[0]="dfs_data_dir_list"
hdfs_key[1]="dfs_name_dir_list"
hdfs_key[2]="fs_checkpoint_dir_list"
hdfs_key[3]="dfs_datanode_max_xcievers"
hdfs_key[4]="dfs_namenode_handler_count"
hdfs_key[5]="dfs_namenode_service_handler_count"
hdfs_key[6]="service_health_suppression_hdfs_canary_health"
hdfs_key[7]="role_health_suppression_data_node_block_count"
hdfs_key[8]="smon_client_config_overrides"
hdfs_key[9]="dfs_namenode_servicerpc_address"
hdfs_key[10]="dfs_client_use_trash"

hdfs_val[0]="/home/dataDir/data/osd/dfs/dn"
hdfs_val[1]="/home/dataDir/data/osd/dfs/nn"
hdfs_val[2]="/home/dataDir/data/osd/dfs/snn"
hdfs_val[3]=8192
hdfs_val[4]=32
hdfs_val[5]=32
hdfs_val[6]=true
hdfs_val[7]=true
hdfs_val[8]="<property><name>dfs.socket.timeout</name><value>30000</value></property><property><name>dfs.datanode.socket.write.timeout</name><value>30000</value></property><property><name>ipc.client.connect.max.retries</name><value>5</value></property><property><name>fs.permissions.umask-mode</name><value>000</value></property>"
hdfs_val[9]=8022
hdfs_val[10]=true

hdfs_url[0]="hdfs/roleConfigGroups/hdfs-DATANODE-BASE/config"
hdfs_url[1]="hdfs/roleConfigGroups/hdfs-NAMENODE-BASE/config"
hdfs_url[2]="hdfs/roleConfigGroups/hdfs-SECONDARYNAMENODE-BASE/config"
hdfs_url[3]="hdfs/roleConfigGroups/hdfs-DATANODE-BASE/config"
hdfs_url[4]="hdfs/roleConfigGroups/hdfs-NAMENODE-BASE/config"
hdfs_url[5]="hdfs/roleConfigGroups/hdfs-NAMENODE-BASE/config"
hdfs_url[6]="hdfs/config"
hdfs_url[7]="hdfs/roleConfigGroups/hdfs-DATANODE-BASE/config"
hdfs_url[8]="hdfs/config"
hdfs_url[9]="hdfs/roleConfigGroups/hdfs-NAMENODE-BASE/config"
hdfs_url[10]="hdfs/roleConfigGroups/hdfs-GATEWAY-BASE/config"

#KAFKA
kafka_key[0]="auto.create.topics.enable"
kafka_key[1]="default.replication.factor"
kafka_key[2]="leader.imbalance.check.interval.seconds"
kafka_key[3]="leader.imbalance.per.broker.percentage"
kafka_key[4]="replica.fetch.max.bytes"
kafka_key[5]="num.replica.fetchers"
kafka_key[6]="log.cleaner.threads"
kafka_key[7]="zookeeper_service"
kafka_key[8]="log.dirs"
kafka_key[9]="log.roll.hours"
kafka_key[10]="num.io.threads"
kafka_key[11]="broker_max_heap_size"
kafka_key[12]="broker_java_opts"
kafka_key[13]="num.streams"
kafka_key[14]="mirror_maker_java_opts"

kafka_val[0]=false
kafka_val[1]=3
kafka_val[2]=3600
kafka_val[3]=16
kafka_val[4]=1073741824
kafka_val[5]=10
kafka_val[6]=4
kafka_val[7]="zookeeper"
kafka_val[8]="/home/dataDir/kafka/data"
kafka_val[9]=240
kafka_val[10]=20
kafka_val[11]=4096
kafka_val[12]="-server -XX:+UseParNewGC -XX:MaxDirectMemorySize=1G -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled -XX:+CMSScavengeBeforeRemark -XX:+DisableExplicitGC -Djava.awt.headless=true"
kafka_val[13]=4
kafka_val[14]="-server -XX:+UseParNewGC -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled -XX:+CMSScavengeBeforeRemark  -Djava.awt.headless=true"

kafka_url[0]="kafka/config"
kafka_url[1]="kafka/config"
kafka_url[2]="kafka/config"
kafka_url[3]="kafka/config"
kafka_url[4]="kafka/config"
kafka_url[5]="kafka/config"
kafka_url[6]="kafka/config"
kafka_url[7]="kafka/config"
kafka_url[8]="kafka/roleConfigGroups/kafka-KAFKA_BROKER-BASE/config"
kafka_url[9]="kafka/roleConfigGroups/kafka-KAFKA_BROKER-BASE/config"
kafka_url[10]="kafka/roleConfigGroups/kafka-KAFKA_BROKER-BASE/config"
kafka_url[11]="kafka/roleConfigGroups/kafka-KAFKA_BROKER-BASE/config"
kafka_url[12]="kafka/roleConfigGroups/kafka-KAFKA_BROKER-BASE/config"
kafka_url[13]="kafka/roleConfigGroups/kafka-KAFKA_MIRROR_MAKER-BASE/config"
kafka_url[14]="kafka/roleConfigGroups/kafka-KAFKA_MIRROR_MAKER-BASE/config"

#YARN
yarn_key[0]="hdfs_service"
yarn_key[1]="zookeeper_service"
yarn_key[2]="mapred_submit_replication"
yarn_key[3]="yarn_nodemanager_local_dirs"
yarn_key[4]="yarn_nodemanager_log_dirs"
yarn_key[5]="yarn_nodemanager_resource_memory_mb"
yarn_key[6]="yarn_nodemanager_resource_cpu_vcores"
yarn_key[7]="yarn_nodemanager_resource_memory_mb"
yarn_key[8]="yarn_nodemanager_resource_cpu_vcores"
yarn_key[9]="yarn_nodemanager_resource_memory_mb"
yarn_key[10]="yarn_nodemanager_resource_cpu_vcores"
yarn_key[11]="yarn_nodemanager_resource_memory_mb"
yarn_key[12]="yarn_nodemanager_resource_cpu_vcores"
yarn_key[13]="yarn_scheduler_maximum_allocation_vcores"
yarn_key[14]="yarn_scheduler_minimum_allocation_vcores"

yarn_val[0]="hdfs"
yarn_val[1]="zookeeper"
yarn_val[2]=3
yarn_val[3]="/home/dataDir/data/osd/yarn/nm"
yarn_val[4]="/home/dataDir/data/osd/yarn/container-logs"
yarn_val[5]=81920
yarn_val[6]=24
yarn_val[7]=80
yarn_val[8]=24
yarn_val[9]=80
yarn_val[10]=24
yarn_val[11]=80
yarn_val[12]=24
yarn_val[13]=80
yarn_val[14]=8

yarn_url[0]="yarn/config"
yarn_url[1]="yarn/config"
yarn_url[2]="yarn/roleConfigGroups/yarn-GATEWAY-BASE/config"
yarn_url[3]="yarn/roleConfigGroups/yarn-NODEMANAGER-BASE/config"
yarn_url[4]="yarn/roleConfigGroups/yarn-NODEMANAGER-BASE/config"
yarn_url[5]="yarn/roleConfigGroups/yarn-NODEMANAGER-BASE/config"
yarn_url[6]="yarn/roleConfigGroups/yarn-NODEMANAGER-BASE/config"
yarn_url[7]="yarn/roleConfigGroups/yarn-NODEMANAGER-1/config"
yarn_url[8]="yarn/roleConfigGroups/yarn-NODEMANAGER-1/config"
yarn_url[9]="yarn/roleConfigGroups/yarn-NODEMANAGER-2/config"
yarn_url[10]="yarn/roleConfigGroups/yarn-NODEMANAGER-2/config"
yarn_url[11]="yarn/roleConfigGroups/yarn-NODEMANAGER-3/config"
yarn_url[12]="yarn/roleConfigGroups/yarn-NODEMANAGER-3/config"
yarn_url[13]="yarn/roleConfigGroups/yarn-RESOURCEMANAGER-BASE/config"
yarn_url[14]="yarn/roleConfigGroups/yarn-RESOURCEMANAGER-BASE/config"

#ZOOKEEPER
zookeeper_key[0]="dataDir"
zookeeper_key[1]="dataLogDir"

zookeeper_val[0]="/home/dataDir/zookeeper"
zookeeper_val[1]="/home/dataDir/zookeeper"

zookeeper_url[0]="zookeeper/roleConfigGroups/zookeeper-SERVER-BASE/config"
zookeeper_url[1]="zookeeper/roleConfigGroups/zookeeper-SERVER-BASE/config"

IFS="|"

function curl_exe () {
    if [[ $2 != *[^0-9]* ]]&&[[ $2 != 0* ]]; then
        curl -X PUT -u "$user:$password" -H "content-type:application/json" -i \
        -d "{\"items\": [{\"name\": \"$1\",\"value\":$2}]}" \
        http://$localhost:$port/api/$version/clusters/$cluster_name/services/$3
	else
        curl -X PUT -u "$user:$password" -H "content-type:application/json" -i \
        -d "{\"items\": [{\"name\": \"$1\",\"value\":\"$2\"}]}" \
        http://$localhost:$port/api/$version/clusters/$cluster_name/services/$3
    fi
}

len=${#hdfs_key[@]}
for((i = 0; i < len; i++))
    do
        curl_exe ${hdfs_key[$i]} ${hdfs_val[$i]} ${hdfs_url[$i]}
    done

len=${#kafka_key[@]}
for((i = 0; i < len; i++))
    do
        curl_exe ${kafka_key[$i]} ${kafka_val[$i]} ${kafka_url[$i]}
    done
	
len=${#yarn_key[@]}
for((i = 0; i < len; i++))
    do
        curl_exe ${yarn_key[$i]} ${yarn_val[$i]} ${yarn_url[$i]}
    done

len=${#zookeeper_key[@]}
for((i = 0; i < len; i++))
    do
        curl_exe ${zookeeper_key[$i]} ${zookeeper_val[$i]} ${zookeeper_url[$i]}
    done
